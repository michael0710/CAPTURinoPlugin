# NOTE: action must be started from the tag to be used for the release
on:
  workflow_dispatch:

#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Build Upload Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config Release
      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C Release
      - name: Rename Ubuntu Binary
        run: mv CAPTURinoPlugin CAPTURinoPlugin_ubuntu
  # TODO uploading the artifact here and downloading it later takes a lot of time
  #    - uses: actions/upload-artifact@v4
  #      with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
  #        name: CAPTURinoPlugin ubuntu ${{ github.ref }}
          # A file, directory or wildcard pattern that describes what to upload
          # Required.
  #        path: build/CapturinoPlugin
          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          # Optional. Default is 'warn'
  #        if-no-files-found: warn
          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day.
          # Maximum 90 days unless changed from the repository settings page.
          # Optional. Defaults to repository settings.
  #        retention-days: 1
          # The level of compression for Zlib to be applied to the artifact archive.
          # The value can range from 0 to 9.
          # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
          # Optional. Default is '6'
  #        compression-level: 0
      
          # If true, an artifact with a matching name will be deleted before a new one is uploaded.
          # If false, the action will fail if an artifact for the given name already exists.
          # Does not fail if the artifact does not exist.
          # Optional. Default is 'false'
  #        overwrite: false
          # Whether to include hidden files in the provided path in the artifact
          # The file contents of any hidden files in the path should be validated before
          # enabled this to avoid uploading sensitive information.
          # Optional. Default is 'false'
  #        include-hidden-files: false
  #######################
  # TODO
  # use mingw to build the binary for windows 64-bit
  # upload that artifact as 
  # name: CAPTURinoPlugin win64 ${{ github.ref }}
  #######################

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: true
  #    - name: Download Artifacts
  #      uses: actions/download-artifact@v5
  #      with:
          # Name of the artifact to download.
          # If unspecified, all artifacts for the run are downloaded.
          # Optional.
  #        name: CAPTURinoPlugin ubuntu ${{ github.ref }}
      
          # IDs of the artifacts to download, comma-separated.
          # Either inputs `artifact-ids` or `name` can be used, but not both.
          # Optional.
          #artifact-ids:
      
          # Destination path. Supports basic tilde expansion.
          # Optional. Default is $GITHUB_WORKSPACE
          #path:
      
          # A glob pattern to the artifacts that should be downloaded.
          # Ignored if name is specified.
          # Optional.
          #pattern:
      
          # When multiple artifacts are matched, this changes the behavior of the destination directories.
          # If true, the downloaded artifacts will be in the same directory specified by path.
          # If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
          # Note: When downloading a single artifact (by name or ID), it will always be extracted directly to the specified path.
          # Optional. Default is 'false'
          #merge-multiple:
      
          # The GitHub token used to authenticate with the GitHub API.
          # This is required when downloading artifacts from a different repository or from a different workflow run.
          # Optional. If unspecified, the action will download artifacts from the current repo and the current workflow run.
          #github-token:
      
          # The repository owner and the repository name joined together by "/".
          # If github-token is specified, this is the repository that artifacts will be downloaded from.
          # Optional. Default is ${{ github.repository }}
          #repository:
      
          # The id of the workflow run where the desired download artifact was uploaded from.
          # If github-token is specified, this is the run that artifacts will be downloaded from.
          # Optional. Default is ${{ github.run_id }}
          #run-id:
      - name: Upload Release Assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./CAPTURinoPlugin_ubuntu
          asset_name: CAPTURinoPlugin_ubuntu_${{ github.ref }}.zip
          asset_content_type: application/zip
